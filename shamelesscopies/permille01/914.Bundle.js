(()=>{"use strict";var t={m:{},u:t=>t+".Bundle.js"};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),t.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var a=t.g.document;if(!e&&a&&(a.currentScript&&(e=a.currentScript.src),!e)){var i=a.getElementsByTagName("script");i.length&&(e=i[i.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=self.location+"";class e{static Version="1.3";static Build=4;constructor(){this.EventListeners=[]}AddEventListener(t,e,a={TTL:1/0,Once:!1}){return void 0===this.EventListeners[t]&&(this.EventListeners[t]=[]),this.EventListeners[t].push({Event:t,Listener:e,Options:a}),this.EventListeners[t].length-1}RemoveEventListener(t,e){this.EventListeners[t].splice(e,1)}FireEventListeners(t,...e){const a=this.EventListeners[t];if(void 0===a)return;const i=[];for(let e=0;e<a.length;e++){const s=a[e].Listener;this.EventListeners[t][e].Options.TTL-- >0&&!0!==this.EventListeners[t][e].Options.Once||this.EventListeners[t].splice(e--,1),i.push(s)}for(const t of i)t(...e)}on(...t){this.AddEventListener(...t)}}class a{static GetDistancedPointMap(){function*t(t){for(;;)yield(t=16807*t%2147483647)/2147483647}function e(e,a){const i=t(8*(e&=15)+(a&=15)+1),s=[];for(let t=0;t<30;t++){const t=Math.floor(64*i.next().value),e=Math.floor(64*i.next().value);s.push({X:t,Z:e})}return s}const a={};for(const t of[6,10,15]){a[t]={};let i=a[t];for(let t=0;t<8;t++)for(let a=0;a<8;a++)i[8*t+a]=e(t,a)}function*i(e,i,s){const o=t(8*(7&e)+(7&i)+1),n=a[s],r=[];for(let t=-1;t<2;t++)for(let a=-1;a<2;a++){const s=t+e,o=a+i;if(s===e&&o===i)continue;const h=[...n[8*(7&s)+(7&o)]];for(const{X:e,Z:i}of h)r.push({X:e+64*Math.sign(t),Z:i+64*Math.sign(a)})}const h=s**2;let l=0;for(;l++<10;){let t=0;t:for(;t++<10;){const t=Math.floor(64*o.next().value),e=Math.floor(64*o.next().value);for(const a of r)if((t-a.X)**2+(e-a.Z)**2<h)continue t;const a={X:t,Z:e};r.push(a),yield a,l=0;break}}}const s={};for(const t of[6,10,15]){s[t]={};let e=s[t];for(let a=0;a<8;a++)for(let s=0;s<8;s++)e[8*a+s]=[...i(a,s,t)]}return s}constructor(i){this.Events=new e,this.LoadManager=i,this.HeightMaps={},this.DistancedPointMap=a.GetDistancedPointMap(),this.VoxelTypes=i.VoxelTypes,this.Data1=i.Data1,this.Data8=i.Data8,this.Data64=i.Data64,this.GPUInfo8=i.GPUInfo8,this.GPUInfo64=i.GPUInfo64,this.GPUBoundingBox1=i.GPUBoundingBox1,this.Data64Offset=i.Data64Offset,this.AllocationIndex=i.AllocationIndex,this.AllocationArray=i.AllocationArray,this.AllocationIndex64=i.AllocationIndex64,this.AllocationArray64=i.AllocationArray64,this.WorkerHeightMapGenerator=new Worker(new URL(t.p+t.u(432),t.b),{name:"Heightmap Generator Manager"}),this.WorkerRegionGenerator=new Worker(new URL(t.p+t.u(342),t.b),{name:"Region Generator Manager"}),this.WorkerRegionDecorator=new Worker(new URL(t.p+t.u(636),t.b),{name:"Region Decorator Thread Pool"}),this.WorkerGeometryDataGenerator=new Worker(new URL(t.p+t.u(20),t.b),{name:"Geometry Data Generator Manager"}),this.FinishedStage2Batch=-1,this.Structures=this.LoadManager.Structures,this.MainBlockRegistry=this.LoadManager.MainBlockRegistry,this.ForeignMapping={"biomesoplenty:leaves_4:2":this.MainBlockRegistry.GetBlockByIdentifier("default:leaves").ID,"biomesoplenty:log_2":this.MainBlockRegistry.GetBlockByIdentifier("default:wood").ID,"biomesoplenty:log_2:8":this.MainBlockRegistry.GetBlockByIdentifier("default:wood").ID,"minecraft:spruce_log":this.MainBlockRegistry.GetBlockByIdentifier("default:wood").ID,"minecraft:spruce_leaves":this.MainBlockRegistry.GetBlockByIdentifier("default:leaves").ID,"minecraft:oak_log":this.MainBlockRegistry.GetBlockByIdentifier("default:oak_wood").ID,"minecraft:oak_leaves":this.MainBlockRegistry.GetBlockByIdentifier("default:oak_leaves").ID,NotFound:this.MainBlockRegistry.GetBlockByIdentifier("primary:error").ID,LOG:this.MainBlockRegistry.GetBlockByIdentifier("default:oak_wood").ID,LEAVES:this.MainBlockRegistry.GetBlockByIdentifier("default:oak_leaves").ID},this.WorkerHeightMapGenerator.postMessage({Request:"TransferRRS",RequiredRegionsSelection:this.LoadManager.RequiredRegionsSelection}),this.WorkerHeightMapGenerator.postMessage({Request:"SetSeed",Seed:17}),this.WorkerHeightMapGenerator.addEventListener("message",function(t){const e=t.data.RegionX+","+t.data.RegionZ+(0!==t.data.Depth?","+t.data.Depth:"");"SaveHeightMap"===t.data.Request&&(this.HeightMaps[e]={HeightMap:t.data.HeightMap,SlopeMap:t.data.SlopeMap,TemperatureMap:t.data.TemperatureMap,MinHeight:t.data.MinHeight,MaxHeight:t.data.MaxHeight},this.Events.FireEventListeners("GeneratedHeightMap"+e,t))}.bind(this)),this.WorkerRegionGenerator.postMessage({Request:"TransferRRS",RequiredRegionsSelection:this.LoadManager.RequiredRegionsSelection}),this.WorkerRegionGenerator.postMessage({Request:"InitialiseBlockRegistry",BlockIDMapping:this.LoadManager.MainBlockRegistry.BlockIDMapping,BlockIdentifierMapping:this.LoadManager.MainBlockRegistry.BlockIdentifierMapping}),this.WorkerRegionGenerator.postMessage({Request:"ShareStructures",Structures:this.LoadManager.Structures,ForeignMapping:this.ForeignMapping}),this.WorkerRegionGenerator.postMessage({Request:"SaveDistancedPointMap",DistancedPointMap:this.DistancedPointMap}),this.WorkerRegionGenerator.postMessage({Request:"ShareDataBuffers",Data1:this.Data1,Data8:this.Data8,Data64:this.Data64,VoxelTypes:this.VoxelTypes,Data64Offset:this.Data64Offset,AllocationIndex:this.AllocationIndex,AllocationArray:this.AllocationArray,AllocationIndex64:this.AllocationIndex64,AllocationArray64:this.AllocationArray64}),this.WorkerRegionGenerator.addEventListener("message",function(t){switch(t.data.Request){case"GeneratedRegionData":case"SaveVirtualRegionData":break;case"FinishedLoadingBatch":this.FinishedStage2Batch=t.data.LoadingBatch,this.TryFinishingBatch(!1)}}.bind(this)),this.WorkerRegionDecorator.postMessage({Request:"TransferRRS",RequiredRegionsSelection:this.LoadManager.RequiredRegionsSelection}),this.WorkerRegionDecorator.postMessage({Request:"InitialiseBlockRegistry",BlockIDMapping:this.LoadManager.MainBlockRegistry.BlockIDMapping,BlockIdentifierMapping:this.LoadManager.MainBlockRegistry.BlockIdentifierMapping}),this.WorkerRegionDecorator.postMessage({Request:"ShareStructures",Structures:this.LoadManager.Structures,ForeignMapping:this.ForeignMapping}),this.WorkerRegionDecorator.postMessage({Request:"SaveDistancedPointMap",DistancedPointMap:this.DistancedPointMap}),this.WorkerRegionDecorator.postMessage({Request:"ShareDataBuffers",Data1:this.Data1,Data8:this.Data8,Data64:this.Data64,VoxelTypes:this.VoxelTypes,Data64Offset:this.Data64Offset,AllocationIndex:this.AllocationIndex,AllocationArray:this.AllocationArray,AllocationIndex64:this.AllocationIndex64,AllocationArray64:this.AllocationArray64}),this.WorkerRegionDecorator.addEventListener("message",function(t){if("Finished"!==t.data.Request)throw new Error(t.data.Request+" is not supported.");Atomics.sub(this.LoadManager.LoadStageQueueLengths,3,1),-1!==this.FinishedStage2Batch&&this.TryFinishingBatch(!1)}.bind(this)),this.WorkerGeometryDataGenerator.postMessage({Request:"SaveStuff",MaxWorkers:3,VoxelTypes:this.VoxelTypes,Data8:this.Data8,GPUBoundingBox1:this.GPUBoundingBox1,GPUInfo8:this.GPUInfo8,GPUInfo64:this.GPUInfo64,Data64:this.Data64,Data64Offset:this.Data64Offset}),this.WorkerGeometryDataGenerator.onmessage=function(t){"GenerateBoundingGeometry"===t.data.Request&&(self.postMessage(t.data,[t.data.Info.buffer]),Atomics.sub(this.LoadManager.LoadStageQueueLengths,4,1),this.TryFinishingBatch(!0))}.bind(this),function t(){self.setTimeout(t.bind(this),50),this.CheckStage4Eligibility()}.bind(this)()}TryFinishingBatch(t){t||(this.CheckStage3Eligibility(),this.LoadManager.GPURegionDataLoader.UpdateGPUData(),this.CheckStage4Eligibility()),-1!==this.FinishedStage2Batch&&0===Atomics.load(this.LoadManager.LoadStageQueueLengths,3)&&0===Atomics.load(this.LoadManager.LoadStageQueueLengths,4)&&(this.Events.FireEventListeners("FinishedLoadingBatch",this.FinishedStage2Batch),self.postMessage({Request:"FinishedLoadingBatch",Batch:this.FinishedStage2Batch}))}Stage1(t,e,a,i=-1,s=1){const o=t+","+a,n=this.HeightMaps[o];n?this.Stage2(t,e,a,i,s):(void 0===n&&(this.HeightMaps[o]=null,this.WorkerHeightMapGenerator.postMessage({Request:"GenerateHeightMap",RegionX:t,RegionZ:a,XLength:64,ZLength:64,GenerateSlopeMap:!0,Depth:0})),this.Events.AddEventListener("GeneratedHeightMap"+o,function(){this.Stage2(t,e,a,i,s)}.bind(this),{Once:!0}))}Stage2(t,e,a,i,s){const o=t+","+a,n=this.HeightMaps[o];n&&this.WorkerRegionGenerator.postMessage({Request:"GenerateRegionData",RegionX:t,RegionY:e,RegionZ:a,HeightMap:n.HeightMap,SlopeMap:n.SlopeMap,TemperatureMap:n.TemperatureMap,MaxHeight:n.MaxHeight,MinHeight:n.MinHeight,LoadingBatch:i,BatchSize:s})}CheckStage3Eligibility(){for(let t=1;t<7;t++)for(let e=1;e<7;e++)t:for(let a=1;a<7;a++){const i=t<<6|e<<3|a;if(2!=(this.Data64[i]>>19&7))continue;for(let i=t-1;i<t+2;i++)for(let t=a-1;t<a+2;t++)for(let a=e-1;a<e+2;a++)if((this.Data64[i<<6|a<<3|t]>>19&7)<2)continue t;this.Data64[i]=-3670017&this.Data64[i]|3<<19;const s=this.Data64Offset[0]+t,o=this.Data64Offset[1]+e,n=this.Data64Offset[2]+a,r=this.HeightMaps[s+","+n];Atomics.add(this.LoadManager.LoadStageQueueLengths,3,1),this.WorkerRegionDecorator.postMessage({Request:"DecorateRegion",RegionX:s,RegionY:o,RegionZ:n,Maps:r})}}CheckStage4Eligibility(){for(let t=0;t<8;++t)for(let e=0;e<8;++e)for(let a=0;a<8;++a)for(let i=0;i<8;++i){const s=t<<9|e<<6|a<<3|i,o=e+this.Data64Offset[3*t+0],n=a+this.Data64Offset[3*t+1],r=i+this.Data64Offset[3*t+2],h=this.GPUInfo64[s],l=this.Data64[s];1!=(h>>31&1)&&7==(l>>19&7)&&1!=(l>>29&1)&&(this.Data64[s]|=1<<29,Atomics.add(this.LoadManager.LoadStageQueueLengths,4,1),this.WorkerGeometryDataGenerator.postMessage({Request:"GenerateBoundingGeometry",RegionX:o,RegionY:n,RegionZ:r,Depth:t,Time:self.performance.now()}))}}VirtualStage1(t,e,a,i,s=-1,o=1){const n=t+","+a+","+i,r=this.HeightMaps[n];r?this.VirtualStage2(t,e,a,i,s,o):(void 0===r&&(this.HeightMaps[n]=null,this.WorkerHeightMapGenerator.postMessage({Request:"GenerateHeightMap",RegionX:t,RegionZ:a,XLength:64,ZLength:64,GenerateSlopeMap:!0,Depth:i})),this.Events.AddEventListener("GeneratedHeightMap"+n,function(){this.VirtualStage2(t,e,a,i,s,o)}.bind(this),{Once:!0}))}VirtualStage2(t,e,a,i,s,o){const n=t+","+a+","+i,r=this.HeightMaps[n];r?this.WorkerRegionGenerator.postMessage({Request:"GenerateVirtualRegionData",RegionX:t,RegionY:e,RegionZ:a,Depth:i,HeightMap:r.HeightMap,SlopeMap:r.SlopeMap,TemperatureMap:r.TemperatureMap,MaxHeight:r.MaxHeight,MinHeight:r.MinHeight,LoadingBatch:s,BatchSize:o}):console.error("No heightmap!! Region generation might stall as a result...")}}class i extends Promise{static#t=i.#e();static#e(){i.prototype.constructor=Promise}constructor(t={}){let e,a;super((function(t,i){e=t,a=i})),this.resolve=e,this.reject=a,t.Timeout&&globalThis.setTimeout((t.Throw??1?this.reject:this.resolve).bind(this),+t.Timeout)}}class s{constructor(t){this.Events=new e,this.LoadManager=t,this.Regions=t.Regions,this.VirtualRegions=t.VirtualRegions,this.Data64Offset=t.Data64Offset,this.PlayerPosition=t.PlayerPosition,this.Data8=t.Data8,this.Data64=t.Data64,this.GPUData8=t.GPUData8,this.GPUData64=t.GPUData64,this.GPUInfo8=t.GPUInfo8,this.GPUInfo64=t.GPUInfo64,this.AllocationIndex=t.AllocationIndex,this.AllocationArray=t.AllocationArray,this.AllocationIndex64=t.AllocationIndex64,this.AllocationArray64=t.AllocationArray64,this.LoadStageQueueLengths=t.LoadStageQueueLengths,this.LoadingBatch=0,self.EventHandler.FinishedGPUDataTransfer=function(){this.Events.FireEventListeners("FinishedGPUDataTransfer")}.bind(this),async function t(){this.UpdateData64Offset();const e=this.LoadRegions();if(-1!==e){const t=new i({Timeout:15e3});this.LoadManager.RegionLoader.Events.AddEventListener("FinishedLoadingBatch",(function(a){e===a&&t.resolve()})),console.time();try{await t}catch(t){console.warn("Batch generation is taking longer than 15000ms.")}console.timeEnd()}self.setTimeout(t.bind(this),25)}.bind(this)()}DeallocateGPUData8(t,e,a,i){const s=t<<9|e<<6|a<<3|i;this.GPUData8[s],this.GPUInfo8[s]=1<<31}DeallocateGPUData64(t,e,a,i,s){const o=e<<9|a<<6|i<<3|s;for(;this.LoadManager.Data64SegmentAllocations[o].length>0;)this.LoadManager.FreeSegments.push(this.LoadManager.Data64SegmentAllocations[o].pop());this.LoadManager.FreeGPUData64.push(t),this.GPUInfo64[o]=1<<31}UpdateData64Offset(){const t=this.PlayerPosition[0],e=this.PlayerPosition[1],a=this.PlayerPosition[2];let i=!1;const s=new Int32Array(24);for(let o=0;o<8;++o){const n=64<<o,r=2*Math.ceil((Math.floor(t/n)-4)/2),h=2*Math.ceil((Math.floor(e/n)-4)/2),l=2*Math.ceil((Math.floor(a/n)-4)/2);r-this.Data64Offset[3*o+0]!=0&&(i=!0),h-this.Data64Offset[3*o+1]!=0&&(i=!0),l-this.Data64Offset[3*o+2]!=0&&(i=!0),s[3*o+0]=r,s[3*o+1]=h,s[3*o+2]=l}const o=new Uint32Array(4096).fill(2147483648),n=new Uint32Array(4096).fill(2147483648),r=new Array(4096).fill(null),h=new Uint8Array(4096),l=(c=this.Data8,g=this.AllocationIndex,d=this.AllocationArray,function(t,e,a,i){const s=c[t<<9|e<<6|a<<3|i];if(0==(s&1<<31)){if(0==(s&1<<28)){const t=Atomics.add(g,1,1)&d.length-1;Atomics.store(d,t,s)}c[t<<9|e<<6|a<<3|i]=2147483648}});var c,g,d;const f=(p=this.Data64,u=this.AllocationIndex64,D=this.AllocationArray64,this.Data64Offset,function(t,e,a,i,s){if(1==(p[s<<9|e<<6|a<<3|i]>>31&1))return;const o=4095&Atomics.add(u,1,1);Atomics.store(D,o,t),p[s<<9|e<<6|a<<3|i]=1<<31});var p,u,D;for(let t=0;t<8;++t){const e=s[3*t+0]-this.Data64Offset[3*t+0],a=s[3*t+1]-this.Data64Offset[3*t+1],i=s[3*t+2]-this.Data64Offset[3*t+2];for(let s=0;s<8;s++){const c=s-e;for(let e=0;e<8;e++){const g=e-a;for(let a=0;a<8;a++){const d=a-i;if(c<0||c>=8||g<0||g>=8||d<0||d>=8){const i=t<<9|s<<6|e<<3|a,o=this.Data64[i],n=this.GPUInfo64[i];if(0==(o>>31&1)){const i=524287&o;for(let t=0;t<512;++t)l(i,t>>6,t>>3&7,7&t);f(i,s,e,a,t)}if(n>>31==0){const o=268435455&this.GPUInfo64[i];for(let t=0;t<512;++t)this.DeallocateGPUData8(o,t>>6,t>>3&7,7&t);for(let t=0;t<64;++t)this.GPUData8[o<<6|t]=255;this.DeallocateGPUData64(o,t,s,e,a)}}else{const i=t<<9|c<<6|g<<3|d,l=t<<9|s<<6|e<<3|a;o[i]=this.Data64[l],n[i]=this.GPUInfo64[l],r[i]=this.LoadManager.Data64SegmentAllocations[l],h[i]=this.LoadManager.Data64SegmentIndices[l]}}}}}this.GPUData64.fill(0);for(let t=0;t<512;++t)for(let e=0;e<8;++e)this.GPUData64[t]|=(this.GPUInfo64[t<<3|e]>>31&1)<<e;this.GPUInfo64.set(n,0),this.Data64Offset.set(s,0),this.Data64.set(o,0);for(let t=0,e=r.length;t<e;++t)null===r[t]&&(r[t]=[]);this.LoadManager.Data64SegmentAllocations=r,this.LoadManager.Data64SegmentIndices.set(h),self.postMessage({Request:"UpdatedData64Offset"})}LoadRegions(){const t=[];for(let e=0;e<8;++e)for(let a=0;a<8;a++)for(let i=0;i<8;i++)for(let s=0;s<8;s++){const o=e<<9|a<<6|i<<3|s;if(0==(this.Data64[o]>>19&7)){this.Data64[o]=-3670017&this.Data64[o]|1<<19;const n=a+this.Data64Offset[3*e+0],r=i+this.Data64Offset[3*e+1],h=s+this.Data64Offset[3*e+2];t.push([e,n,r,h])}}t.length>0&&(this.LoadManager.FinishedStage2Batch=-1);for(const[e,a,i,s]of t)0===e?this.LoadManager.RegionLoader.Stage1(a,i,s,this.LoadingBatch,t.length):this.LoadManager.RegionLoader.VirtualStage1(a,i,s,e,this.LoadingBatch,t.length);return t.length>0?this.LoadingBatch++:-1}}class o{constructor(t,e,a=-1){this.Identifier=t,this.Properties=e,this.ID=a}}class n{static MAX_BLOCK_IDS=65536;constructor(){this.BlockIDMapping={},this.BlockIdentifierMapping={},this.RegisterPrimaryIDs()}static Initialise(t,e){let a=Object.create(this.prototype);return a.BlockIDMapping=t,a.BlockIdentifierMapping=e,a}RegisterPrimaryIDs(){this.RegisterBlock(new o("primary:air",{Solid:!1,Invisible:!0,Transparent:!0,Precedence:-32},0),0),this.RegisterBlock(new o("primary:not_loaded",{Solid:!0,Invisible:!0,Transparent:!0},49148),49148),this.RegisterBlock(new o("primary:placeholder",{Solid:!0,Invisible:!1,Transparent:!1},49149),49149),this.RegisterBlock(new o("primary:temp",{Solid:!0,Invisible:!1,Transparent:!1},49150),49150),this.RegisterBlock(new o("primary:error",{Solid:!0,Invisible:!1,Transparent:!1,Precedence:1/0},49151),49151),this.RegisterBlock(new o("primary:custom",{Solid:!0,Invisible:!1,Transparent:!1,Precedence:1024},65535),65535),this.RegisterBlock(new o("generic:solid",{Solid:!0,Invisible:!1,Transparent:!1},61440),61440),this.RegisterBlock(new o("generic:gas",{Solid:!1,Invisible:!0,Transparent:!0},61441),61441),this.RegisterBlock(new o("generic:fluid",{Solid:!1,Invisible:!1,Transparent:!0},61442),61442)}RegisterBlock(t,e){if(void 0!==e){if(e<0||e>=n.MAX_BLOCK_IDS)throw new Error("Invalid Block ID.");if(void 0!==this.BlockIDMapping[e])throw new Error("The Block ID "+e+" has already been mapped to a block ("+this.GetBlockByID(e).Identifier+"). Try not specifying the ID to ensure that the block is given a unique Block ID.")}else e=this.FindSmallestID();this.BlockIDMapping[e]=t,this.BlockIdentifierMapping[t.Identifier]=t,t.ID=e}GetBlockByID(t){return this.BlockIDMapping[t]??this.BlockIDMapping[49151]}GetBlockByIdentifier(t){return this.BlockIdentifierMapping[t]??this.BlockIDMapping[49151]}FindSmallestID(){for(let t=0;t<n.MAX_BLOCK_IDS;t++)if(void 0===this.BlockIDMapping[t])return t}}class r{constructor(t){this.LoadManager=t,function t(){self.setTimeout(t.bind(this),75),this.UpdateGPUData()}.bind(this)()}AllocateSegment(t){const e=this.LoadManager.FreeSegments.pop();if(void 0===e)throw new Error("Ran out of segments!!");return this.LoadManager.Data64SegmentAllocations[t].push(e),e}AllocateGPUData64(t){const e=this.LoadManager.FreeGPUData64.pop();if(void 0===e)throw new Error("Ran out of GPU Data64!!");return this.LoadManager.GPUInfo64[t]=e,e}UpdateGPUData(){const t=this.LoadManager.Data64,e=this.LoadManager.Data8,a=this.LoadManager.Data1,i=this.LoadManager.VoxelTypes,s=(this.LoadManager.GPUData64,this.LoadManager.GPUData8),o=this.LoadManager.GPUData1,n=this.LoadManager.GPUInfo64,r=this.LoadManager.GPUInfo8,h=this.LoadManager.GPUType1,l=this.LoadManager.GPUBoundingBox1,c=this.LoadManager.Data64SegmentAllocations,g=this.LoadManager.Data64SegmentIndices;for(let d=0;d<8;++d)for(let f=0;f<8;f++)for(let p=0;p<8;p++)for(let u=0;u<8;u++){const D=d<<9|f<<6|p<<3|u,M=t[D];if(7!=(M>>19&7))continue;if(1==(M>>31&1)){t[D]&=~(1<<30),n[D]|=1<<30;continue}if(0==(M>>30&1))continue;const R=524287&M,I=new Set;for(let i=0;i<8;i++)for(let s=0;s<8;s++)for(let o=0;o<8;o++){const n=R<<9|i<<6|s<<3|o,r=e[n];if(1!=(r>>31&1)&&0!=(r>>29&3))if(e[n]&=~(3<<29),1==(r>>30&1)){let h=!1;if(0==(r>>28&1)){const t=(268435455&r)<<6;for(let e=t;e<t+64;++e)if(0!==a[e]){h=!0,I.add(n);break}}for(const[a,r,l]of[[i-1,s,o],[i+1,s,o],[i,s-1,o],[i,s+1,o],[i,s,o-1],[i,s,o+1]]){const i=f+Math.floor(a/8);if(i<0||i>7)continue;const s=p+Math.floor(r/8);if(s<0||s>7)continue;const o=u+Math.floor(l/8);if(o<0||o>7)continue;const c=d<<9|(7&i)<<6|(7&s)<<3|7&o;if(1==(t[c]>>31&1)){!h&&(t[c]>>19&7)>=2&&I.add(n);continue}const g=(524287&t[c])<<9|(7&a)<<6|(7&r)<<3|7&l;1!=(e[g]>>31&1)?h&&(c===D?I.add(g):(e[g]|=1<<29,t[c]|=1<<30)):h||I.add(n)}}else 1==(r>>29&1)&&I.add(n)}if(0===I.size)continue;let L=n[D];1==(L>>31&1)&&(L=this.AllocateGPUData64(D)),L&=268435455;const B=c[D];0===B.length&&this.AllocateSegment(D);for(let t=0;t<512;++t){const s=R<<9|t,n=L<<9|t;if(!I.has(s))continue;let c=null;const d=g[D];16===d?(c=this.AllocateSegment(D)<<4,g[D]=1):(c=B[B.length-1]<<4|d,g[D]++),r[n]=c|1<<30;const f=e[s],p=c<<6,u=c<<9;if(1==(f>>28&1)){const t=65535&f;for(let t=0;t<64;++t)o[p|t]=0;for(let e=0;e<512;++e)h[u|e]=t;l[n]=511}else{const t=268435455&e[s],r=t<<6,c=t<<9;for(let t=0;t<64;++t)o[p|t]=a[r|t];let g=7,d=7,f=7,D=0,M=0,R=0;for(let t=0;t<8;++t)for(let e=0;e<8;++e)for(let a=0;a<8;++a){const s=i[c|t<<6|e<<3|a];h[u|t<<6|e<<3|a]=s,0!==s&&(g>t&&(g=t),d>e&&(d=e),f>a&&(f=a),D<t&&(D=t),M<e&&(M=e),R<a&&(R=a))}g=Math.min(0,g),d=Math.min(0,d),f=Math.min(1,f);for(let t=0;t<64;++t)o[p|t]=a[r|t];l[n]=g<<15|d<<12|f<<9|D<<6|M<<3|R}}for(let t=0;t<64;++t){const e=L<<9|t<<3;s[e>>3]=0;for(let t=0;t<8;++t)s[e>>3]|=(r[e|t]>>31&1)<<t}n[D]|=1<<30,t[D]&=~(1<<29)}}}class h{constructor(t){this.MainBlockRegistry=n.Initialise(t.BlockIDMapping,t.BlockIdentifierMapping),this.RequiredRegionsSelection=new Float64Array(new SharedArrayBuffer(3168)),this.SharedDebugData=t.SharedDebugData,this.PlayerPosition=t.SharedPlayerPosition,this.Structures=t.Structures,this.AtlasRanges=t.AtlasRanges,this.AtlasWidth=t.AtlasWidth,this.AtlasHeight=t.AtlasHeight,this.VoxelTypes=t.VoxelTypes,this.Data1=t.Data1,this.Data8=t.Data8,this.Data64=t.Data64,this.Data64Offset=t.Data64Offset,this.AllocationIndex=t.AllocationIndex,this.AllocationArray=t.AllocationArray,this.AllocationIndex64=t.AllocationIndex64,this.AllocationArray64=t.AllocationArray64,this.GPUData1=t.GPUData1,this.GPUData8=t.GPUData8,this.GPUData64=t.GPUData64,this.GPUType1=t.GPUType1,this.GPUInfo8=t.GPUInfo8,this.GPUInfo64=t.GPUInfo64,this.GPUBoundingBox1=t.GPUBoundingBox1,this.LoadStageQueueLengths=t.LoadStageQueueLengths,this.FreeSegments=[];for(let t=0;t<16384;++t)this.FreeSegments.push(t);self.EventHandler.GetFreeSegments=function(){self.postMessage({Request:"GetFreeSegments",Segments:this.FreeSegments.length})}.bind(this),this.Data64SegmentAllocations=new Array(4096).fill().map((function(){return[]})),this.Data64SegmentIndices=new Uint8Array(4096),this.FreeGPUData64=[];for(let t=0;t<4096;++t)this.FreeGPUData64.push(t);this.RegionLoader=new a(this),this.GPURegionDataLoader=new r(this),this.RRSLoader=new s(this),function t(){self.setTimeout(t.bind(this),100),this.SharedDebugData[0]=this.FreeSegments.length,this.SharedDebugData[1]=16384}.bind(this)()}}self.EventHandler={},self.MainLoadManager=null,self.Settings={VirtualRegionDepths:7,LoadDistance:4},self.onmessage=function(t){EventHandler[t.data.Request]?.(t.data)},EventHandler.SaveStuff=function(t){self.MainLoadManager=new h(t)}})();