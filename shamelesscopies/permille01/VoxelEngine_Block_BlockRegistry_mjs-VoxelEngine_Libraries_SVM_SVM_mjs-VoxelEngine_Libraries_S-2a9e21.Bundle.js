"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkElectronProject"] = self["webpackChunkElectronProject"] || []).push([["VoxelEngine_Block_BlockRegistry_mjs-VoxelEngine_Libraries_SVM_SVM_mjs-VoxelEngine_Libraries_S-2a9e21"],{

/***/ "./VoxelEngine/Block/Block.mjs":
/*!*************************************!*\
  !*** ./VoxelEngine/Block/Block.mjs ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Block)\n/* harmony export */ });\nclass Block{\r\n  constructor(Identifier, Properties, ID = -1){ //The Identifier is a string like \"default:air\", not its ID which would be 0.\r\n    this.Identifier = Identifier;\r\n    this.Properties = Properties;\r\n    this.ID = ID;\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://ElectronProject/./VoxelEngine/Block/Block.mjs?");

/***/ }),

/***/ "./VoxelEngine/Block/BlockRegistry.mjs":
/*!*********************************************!*\
  !*** ./VoxelEngine/Block/BlockRegistry.mjs ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BlockRegistry)\n/* harmony export */ });\n/* harmony import */ var _Block_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Block.mjs */ \"./VoxelEngine/Block/Block.mjs\");\n\r\nclass BlockRegistry{\r\n  static MAX_BLOCK_IDS = 65536;\r\n  constructor(){\r\n    this.BlockIDMapping = {};\r\n    this.BlockIdentifierMapping = {};\r\n    this.RegisterPrimaryIDs();\r\n  }\r\n  static Initialise(BlockIDMapping, BlockIdentifierMapping){\r\n    let This = Object.create(this.prototype);\r\n    This.BlockIDMapping = BlockIDMapping;\r\n    This.BlockIdentifierMapping = BlockIdentifierMapping;\r\n    return This;\r\n  }\r\n  RegisterPrimaryIDs(){\r\n    this.RegisterBlock(new _Block_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"primary:air\", {\"Solid\": false, \"Invisible\": true, \"Transparent\": true, \"Precedence\": -32}, 0), 0);\r\n    this.RegisterBlock(new _Block_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"primary:not_loaded\", {\"Solid\": true, \"Invisible\": true, \"Transparent\": true}, 49148), 49148);\r\n    this.RegisterBlock(new _Block_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"primary:placeholder\", {\"Solid\": true, \"Invisible\": false, \"Transparent\": false}, 49149), 49149);\r\n    this.RegisterBlock(new _Block_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"primary:temp\", {\"Solid\": true, \"Invisible\": false, \"Transparent\": false}, 49150), 49150);\r\n    this.RegisterBlock(new _Block_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"primary:error\", {\"Solid\": true, \"Invisible\": false, \"Transparent\": false, \"Precedence\": Infinity}, 49151), 49151);\r\n    this.RegisterBlock(new _Block_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"primary:custom\", {\"Solid\": true, \"Invisible\": false, \"Transparent\": false, \"Precedence\": 1024}, 65535), 65535);\r\n\r\n    this.RegisterBlock(new _Block_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"generic:solid\", {\"Solid\": true, \"Invisible\": false, \"Transparent\": false}, 61440), 61440);\r\n    this.RegisterBlock(new _Block_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"generic:gas\", {\"Solid\": false, \"Invisible\": true, \"Transparent\": true}, 61441), 61441);\r\n    this.RegisterBlock(new _Block_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"generic:fluid\", {\"Solid\": false, \"Invisible\": false, \"Transparent\": true}, 61442), 61442);\r\n  }\r\n  RegisterBlock(Block, ID){\r\n    if(ID !== undefined){\r\n      if(ID < 0 || ID >= BlockRegistry.MAX_BLOCK_IDS) throw new Error(\"Invalid Block ID.\");\r\n      if(this.BlockIDMapping[ID] !== undefined) throw new Error(\"The Block ID \" + ID + \" has already been mapped to a block (\" + this.GetBlockByID(ID).Identifier + \"). Try not specifying the ID to ensure that the block is given a unique Block ID.\");\r\n    }\r\n    else ID = this.FindSmallestID();\r\n    this.BlockIDMapping[ID] = Block;\r\n    this.BlockIdentifierMapping[Block.Identifier] = Block;\r\n    Block.ID = ID;\r\n  }\r\n  GetBlockByID(ID){\r\n    return this.BlockIDMapping[ID] ?? this.BlockIDMapping[49151];\r\n  }\r\n  GetBlockByIdentifier(Identifier){\r\n    return this.BlockIdentifierMapping[Identifier] ?? this.BlockIDMapping[49151];\r\n  }\r\n  FindSmallestID(){\r\n    for(let i = 0; i < BlockRegistry.MAX_BLOCK_IDS; i++){\r\n      if(this.BlockIDMapping[i] === undefined) return i;\r\n    }\r\n  }\r\n}\r\n\n\n//# sourceURL=webpack://ElectronProject/./VoxelEngine/Block/BlockRegistry.mjs?");

/***/ }),

/***/ "./VoxelEngine/Libraries/SVM/SVM.mjs":
/*!*******************************************!*\
  !*** ./VoxelEngine/Libraries/SVM/SVM.mjs ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SVM)\n/* harmony export */ });\n/* harmony import */ var _Libraries_Utilities_0_7_13_8_Utilities_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../Libraries/Utilities/0.7.13.8/Utilities.mjs */ \"./VoxelEngine/Libraries/Utilities/0.7.13.8/Utilities.mjs\");\n/* harmony import */ var _ScalesContainer_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ScalesContainer.mjs */ \"./VoxelEngine/Libraries/SVM/ScalesContainer.mjs\");\n\r\n\r\nclass SVM{\r\n  static INTERPOLATION_NEAREST_NEIGHBOUR = 1;\r\n  static INTERPOLATION_HIGHEST_FREQUENCY = 2;\r\n  static INTERPOLATION_COMMON_BLOCKS = 3;\r\n  constructor(Scales, Metadata = null, Info = {}){\r\n    this.Scales = Scales;\r\n    this.Metadata = Metadata;\r\n    this.Info = Info;\r\n  }\r\n  DirectPaste(X, Y, Z, ScaleID, BlockRegistry, Setter, IgnoreAir = false){\r\n    const Scale = this.Scales.GetScale(ScaleID, BlockRegistry);\r\n    const StartX = X + Scale.XOffset;\r\n    const StartY = Y + Scale.YOffset;\r\n    const StartZ = Z + Scale.ZOffset;\r\n    const Data = Scale.Data;\r\n    for(let x = StartX, XMax = Scale.XLength + StartX, Stride = 0; x < XMax; x++){\r\n      for(let y = StartY, YMax = Scale.YLength + StartY; y < YMax; y++){\r\n        for(let z = StartZ, ZMax = Scale.ZLength + StartZ; z < ZMax; z++, Stride++){\r\n          if(!IgnoreAir || Data[Stride] !== 0) Setter(x, y, z, Data[Stride]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  static FromObject(OriginalSVMObject){\r\n    const SVMObject = {};\r\n    Object.assign(SVMObject, OriginalSVMObject);\r\n    Object.setPrototypeOf(SVMObject, SVM.prototype);\r\n    Object.setPrototypeOf(SVMObject.Scales, _ScalesContainer_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].prototype);\r\n    return SVMObject;\r\n  }\r\n};\r\n\n\n//# sourceURL=webpack://ElectronProject/./VoxelEngine/Libraries/SVM/SVM.mjs?");

/***/ }),

/***/ "./VoxelEngine/Libraries/SVM/ScalesContainer.mjs":
/*!*******************************************************!*\
  !*** ./VoxelEngine/Libraries/SVM/ScalesContainer.mjs ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ScalesContainer)\n/* harmony export */ });\n/* harmony import */ var _SVM_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./SVM.mjs */ \"./VoxelEngine/Libraries/SVM/SVM.mjs\");\n\r\nclass ScalesContainer{\r\n  constructor(Scales, InterpolationMethod = _SVM_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].INTERPOLATION_NEAREST_NEIGHBOUR, BlockRegistry = null){\r\n    this.Scales = Scales;\r\n    this.InterpolationMethod = InterpolationMethod;\r\n    this.BlockRegistry = BlockRegistry;\r\n  }\r\n  GetScale(Scale, p_BlockRegistry = null){\r\n    if(this.Scales[Scale]) return this.Scales[Scale];\r\n    const BlockRegistry = p_BlockRegistry || this.BlockRegistry;\r\n    if(!BlockRegistry){\r\n      throw new Error(\"Scale Containers need access to a block registry to calculate smaller scales.\");\r\n    }\r\n    // Interpolate new scale, and then save it in the Scales for easier reuse.\r\n    // Assumes that the 1:1 scale is available.\r\n    const Scale1 = this.Scales[1];\r\n    const Scale1Data = Scale1.Data;\r\n    const OriginalXLength = this.Scales[1].XLength;\r\n    const OriginalYLength = this.Scales[1].YLength;\r\n    const OriginalZLength = this.Scales[1].ZLength;\r\n    const ScaledXLength = Math.ceil(OriginalXLength / Scale);\r\n    const ScaledYLength = Math.ceil(OriginalYLength / Scale);\r\n    const ScaledZLength = Math.ceil(OriginalZLength / Scale);\r\n\r\n    const Data = new Uint16Array(ScaledXLength * ScaledYLength * ScaledZLength);\r\n    for(let x = 0, Stride = 0; x < ScaledXLength; x++) for(let y = 0; y < ScaledYLength; y++) for(let z = 0; z < ScaledZLength; z++, Stride++){\r\n      const NewX = Math.floor(x * Scale);\r\n      const NewY = Math.floor(y * Scale);\r\n      const NewZ = Math.floor(z * Scale);\r\n      let Block = 0;\r\n      let CurrentPrecedence = -Infinity;\r\n      for(let dx = NewX; dx < Scale + NewX && dx < OriginalXLength; dx++) for(let dy = NewY; dy < Scale + NewY && dy < OriginalYLength; dy++) for(let dz = NewZ; dz < Scale + NewZ && dz < OriginalZLength; dz++){\r\n        const NewBlock = Scale1Data[dx * OriginalYLength * OriginalZLength + dy * OriginalZLength + dz];\r\n        const NewPrecedence = BlockRegistry.GetBlockByID(NewBlock).Properties.Precedence || 0;\r\n        if(CurrentPrecedence < NewPrecedence || NewBlock === 6){\r\n          CurrentPrecedence = NewPrecedence;\r\n          Block = NewBlock;\r\n        }\r\n      }\r\n      Data[Stride] = Block;\r\n    }\r\n    this.Scales[Scale] = {\r\n      \"XOffset\": Math.floor(Scale1.XOffset / Scale),\r\n      \"YOffset\": Math.floor(Scale1.YOffset / Scale),\r\n      \"ZOffset\": Math.floor(Scale1.ZOffset / Scale),\r\n      \"XLength\": ScaledXLength,\r\n      \"YLength\": ScaledYLength,\r\n      \"ZLength\": ScaledZLength,\r\n      \"Data\": Data\r\n    };\r\n    return this.Scales[Scale];\r\n  }\r\n\r\n  GetScale_NearestNeighbour(Scale){\r\n    if(this.Scales[Scale]) return this.Scales[Scale];\r\n\r\n    // Interpolate new scale, and then save it in the Scales for easier reuse.\r\n    // Assumes that the 1:1 scale is available.\r\n    const Scale1 = this.Scales[1];\r\n    const Scale1Data = Scale1.Data;\r\n    const OriginalXLength = this.Scales[1].XLength;\r\n    const OriginalYLength = this.Scales[1].YLength;\r\n    const OriginalZLength = this.Scales[1].ZLength;\r\n    const ScaledXLength = Math.ceil(OriginalXLength / Scale);\r\n    const ScaledYLength = Math.ceil(OriginalYLength / Scale);\r\n    const ScaledZLength = Math.ceil(OriginalZLength / Scale);\r\n\r\n    const Data = new Uint16Array(ScaledXLength * ScaledYLength * ScaledZLength);\r\n    for(let x = 0, Stride = 0; x < ScaledXLength; x++) for(let y = 0; y < ScaledYLength; y++) for(let z = 0; z < ScaledZLength; z++, Stride++){\r\n      const NewX = Math.floor(x * Scale);\r\n      const NewY = Math.floor(y * Scale);\r\n      const NewZ = Math.floor(z * Scale);\r\n      Data[Stride] = Scale1Data[NewX * OriginalYLength * OriginalZLength + NewY * OriginalZLength + NewZ];\r\n    }\r\n    this.Scales[Scale] = {\r\n      \"XOffset\": Math.floor(Scale1.XOffset / Scale),\r\n      \"YOffset\": Math.floor(Scale1.YOffset / Scale),\r\n      \"ZOffset\": Math.floor(Scale1.ZOffset / Scale),\r\n      \"XLength\": ScaledXLength,\r\n      \"YLength\": ScaledYLength,\r\n      \"ZLength\": ScaledZLength,\r\n      \"Data\": Data\r\n    };\r\n    return this.Scales[Scale];\r\n  }\r\n  //Biased for non-air.\r\n  GetVerticalScale(Scale){\r\n    if(this.Scales[\"Y\" + Scale]) return this.Scales[\"Y\" + Scale];\r\n    const Scale1 = this.Scales[1];\r\n    const Scale1Data = Scale1.Data;\r\n    const OriginalXLength = this.Scales[1].XLength;\r\n    const OriginalYLength = this.Scales[1].YLength;\r\n    const OriginalZLength = this.Scales[1].ZLength;\r\n    const ScaledYLength = Math.ceil(OriginalYLength / Scale);\r\n\r\n    const Data = new Uint16Array(OriginalXLength * ScaledYLength * OriginalZLength);\r\n    for(let x = 0, Stride = 0; x < OriginalXLength; x++) for(let y = 0; y < ScaledYLength; y++) for(let z = 0; z < OriginalZLength; z++, Stride++){\r\n      const NewX = x;\r\n      const NewY = Math.floor(y * Scale);\r\n      const NewZ = z;\r\n\r\n      let Block = 0; //Air\r\n      for(let dy = NewY; dy < OriginalYLength && dy < NewY + Scale; dy++) Block ||= Scale1Data[NewX * OriginalYLength * OriginalZLength + dy * OriginalZLength + NewZ];\r\n\r\n      Data[Stride] = Block;\r\n    }\r\n    this.Scales[\"Y\" + Scale] = {\r\n      \"XOffset\": Scale1.XOffset,\r\n      \"YOffset\": Math.floor(Scale1.YOffset / Scale),\r\n      \"ZOffset\": Scale1.ZOffset,\r\n      \"XLength\": OriginalXLength,\r\n      \"YLength\": ScaledYLength,\r\n      \"ZLength\": OriginalZLength,\r\n      \"Data\": Data\r\n    };\r\n    return this.Scales[\"Y\" + Scale];\r\n  }\r\n  _GetVerticalScale(Scale){\r\n    if(this.Scales[\"Y\" + Scale]) return this.Scales[\"Y\" + Scale];\r\n    const Scale1 = this.Scales[1];\r\n    const Scale1Data = Scale1.Data;\r\n    const OriginalXLength = this.Scales[1].XLength;\r\n    const OriginalYLength = this.Scales[1].YLength;\r\n    const OriginalZLength = this.Scales[1].ZLength;\r\n    const ScaledYLength = Math.ceil(OriginalYLength / Scale);\r\n\r\n    const Data = new Uint16Array(OriginalXLength * ScaledYLength * OriginalZLength);\r\n    for(let x = 0, Stride = 0; x < OriginalXLength; x++) for(let y = 0; y < ScaledYLength; y++) for(let z = 0; z < OriginalZLength; z++, Stride++){\r\n      const NewX = x;\r\n      const NewY = Math.floor(y * Scale);\r\n      const NewZ = z;\r\n      Data[Stride] = Scale1Data[NewX * OriginalYLength * OriginalZLength + NewY * OriginalZLength + NewZ];\r\n    }\r\n    this.Scales[\"Y\" + Scale] = {\r\n      \"XOffset\": Scale1.XOffset,\r\n      \"YOffset\": Math.floor(Scale1.YOffset / Scale),\r\n      \"ZOffset\": Scale1.ZOffset,\r\n      \"XLength\": OriginalXLength,\r\n      \"YLength\": ScaledYLength,\r\n      \"ZLength\": OriginalZLength,\r\n      \"Data\": Data\r\n    };\r\n    return this.Scales[\"Y\" + Scale];\r\n  }\r\n};\r\n\n\n//# sourceURL=webpack://ElectronProject/./VoxelEngine/Libraries/SVM/ScalesContainer.mjs?");

/***/ }),

/***/ "./VoxelEngine/Libraries/Utilities/0.7.13.8/Utilities.mjs":
/*!****************************************************************!*\
  !*** ./VoxelEngine/Libraries/Utilities/0.7.13.8/Utilities.mjs ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Utilities)\n/* harmony export */ });\nclass Utilities{\r\n\tstatic Version = \"0.7.13.8\";\r\n\tstatic Build = 119;\r\n\tstatic DecToHex(Number, Hash) { ///Converts a number from decimal to hexadecimal.\r\n\t\tlet Hex = Number.toString(16);\r\n\t\twhile (Hex.length < 6) {\r\n\t\t\tHex = \"0\" + Hex;\r\n\t\t}\r\n\t\tif (Hash == true){\r\n\t\t\tHex = \"#\" + Hex;\r\n\t\t}\r\n\t\treturn Hex;\r\n\t}\r\n\tstatic Mod(Num1, Num2){\r\n\t\treturn (Num1 >= 0 || Num1 % Num2 === -0) ? Math.abs(Num1 % Num2) : Num1 % Num2 + Num2;\r\n\t}\r\n\tstatic SetProperty(TargetedObject, Path, Value) {\r\n\t\tlet CurrentObject = TargetedObject;\r\n\t\tlet PathArray = Path.split(\".\");\r\n\t\tlet Length = PathArray.length;\r\n\t\tfor(let i = 0; i < Length - 1; i++) {\r\n\t\t\tlet Element = PathArray[i];\r\n\t\t\tif(Object.prototype.toString.call(CurrentObject[Element]) !== \"[object Object]\") CurrentObject[Element] = {};\r\n\t\t\tCurrentObject = CurrentObject[Element];\r\n\t\t}\r\n\t\tCurrentObject[PathArray[Length - 1]] = Value;\r\n\t\treturn CurrentObject;\r\n\t}\r\n\tstatic MergeObjects(...Objects){\r\n\t\tif(Objects.length === 1) return Objects[0];\r\n\t\tlet MergedObject = {};\r\n\t\tfor(let i = Objects.length - 1; i >= 0; i--){\r\n\t\t\tif(Object.prototype.toString.call(Objects[i]) !== \"[object Object]\"){\r\n\t\t\t\tMergedObject = Objects[i];\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tfor(let Property in Objects[i]) {\r\n\t\t\t\tif(Object.prototype.toString.call(Objects[i][Property]) === \"[object Array]\"){\r\n\t\t\t\t\tif(MergedObject[Property] === undefined) MergedObject[Property] = [];\r\n\t\t\t\t\tfor(let j = 0; j < Objects[i][Property].length; j++){\r\n\t\t\t\t\t\tMergedObject[Property][j] = Objects[i][Property][j];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if(Object.prototype.toString.call(Objects[i][Property]) === \"[object Object]\"){\r\n\t\t\t\t\tMergedObject[Property] = Utilities.MergeObjects(Objects[i][Property], MergedObject[Property]);\r\n\t\t\t\t} else{\r\n\t\t\t\t\tif(Object.prototype.toString.call(MergedObject) !== \"[object Object]\") MergedObject = {};\r\n\t\t\t\t\tMergedObject[Property] = Objects[i][Property];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn MergedObject;\r\n\t}\r\n\tstatic CreateArray(length) {\r\n\t\tlet arr = new Array(length || 0),\r\n\t\t\ti = length;\r\n\r\n\t\tif (arguments.length > 1) {\r\n\t\t\tlet args = Array.prototype.slice.call(arguments, 1);\r\n\t\t\twhile (i--) arr[length - 1 - i] = this.CreateArray.apply(this, args);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tstatic CreateCanvas(Width,Height,ZIndex,Display){ ///Creates a HTMLCanvas.\r\n\t\tlet CanvasElement = document.createElement(\"canvas\");\r\n\t\tif(ZIndex !== undefined) CanvasElement.style.zIndex = ZIndex;\r\n\t\tCanvasElement.width = Width || 1280;\r\n\t\tCanvasElement.height = Height || 720;\r\n\t\tCanvasElement.style.display = Display || \"block\";\r\n\t\treturn CanvasElement;\r\n\t}\r\n\tstatic CreateWrapperDiv(Width,Height,ZIndex,Display, Overflow){ ///Creates a HTMLCanvas.\r\n\t\tlet WrapperElement = document.createElement(\"div\");\r\n\t\tif(ZIndex !== undefined) WrapperElement.style.zIndex = ZIndex;\r\n\t\tWrapperElement.style.width = (Width || 1280) + \"px\";\r\n\t\tWrapperElement.style.height = (Height || 720) + \"px\";\r\n\t\tWrapperElement.style.display = Display || \"block\";\r\n\t\tWrapperElement.style.overflow = Overflow || \"hidden\";\r\n\t\treturn WrapperElement;\r\n\t}\r\n\tstatic CreateSVG(Width, Height, ZIndex, Display){\r\n\t\tlet SVGElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n\t\tif(ZIndex !== undefined) SVGElement.style.zIndex = ZIndex;\r\n\t\tSVGElement.style.position = \"absolute\";\r\n\t\tUtilities.SetSVGElementProperty(SVGElement, \"width\", Width || 1280);\r\n\t\tUtilities.SetSVGElementProperty(SVGElement, \"height\", Height || 720);\r\n\t\tSVGElement.style.display = Display || \"block\";\r\n\t\treturn SVGElement;\r\n\r\n\t}\r\n\tstatic CreateSVGElement(Type){\r\n\t\treturn document.createElementNS(\"http://www.w3.org/2000/svg\", Type);\r\n\t}\r\n\tstatic SetSVGElementProperty(SVGElement, Property, Value){\r\n\t\tSVGElement.setAttributeNS(null, Property, Value);\r\n\t}\r\n\tstatic GetSVGElementProperty(SVGElement, Property){\r\n\t\treturn SVGElement.getAttributeNS(null, Property);\r\n\t}\r\n\tstatic CreateUUID(){ //https://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n\t\treturn ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\r\n\t}\r\n\tstatic CircleRectCollision(CircleX, CircleY, CircleRad, RectX, RectY, RectWidth, RectHeight){\r\n\t\tif(RectHeight === undefined) RectWidth = RectHeight;\r\n\r\n\t\t//https://stackoverflow.com/questions/401847/circle-rectangle-collision-detection-intersection\r\n\t\t//Answer by StackOverflow user Cygon:\r\n\t\tlet ClosestX = Math.max(Math.min(CircleX, RectX + RectWidth), RectX);\r\n\t\tlet ClosestY = Math.max(Math.min(CircleY, RectY + RectHeight), RectY);\r\n\r\n\t\t// Calculate the distance between the circle's center and this closest point\r\n\t\t// Calculate the distance between the circle's center and this closest point\r\n\t\tlet DistanceX = CircleX - ClosestX;\r\n\t\tlet DistanceY = CircleY - ClosestY;\r\n\r\n\t\t// If the distance is less than the circle's radius, an intersection occurs\r\n\t\tlet DistanceSquared = Math.pow(DistanceX, 2) + Math.pow(DistanceY, 2);\r\n\t\treturn DistanceSquared < Math.pow(CircleRad, 2);\r\n\t}\r\n\tstatic WeightedAverage(Numbers, Weight = 1){ ///Calculates the weighted average of an array with a given weight. (unused)\r\n\t\tlet Sum = 0;\r\n\t\tfor(let i = 0; i < Numbers.length; i++) Sum += Math.pow(Numbers[i], Weight);\r\n\t\treturn Math.pow(Sum / Numbers.length, 1 / Weight);\r\n\t}\r\n\tstatic GetScientificNotation(GivenNumber, Precision = 1){ ///Returns the scientific notation of a number.\r\n\t\tlet Negative = false;\r\n\t\tif(GivenNumber < 0) Negative = true;\r\n\t\tGivenNumber = String(Math.floor(GivenNumber));\r\n\t\tlet Exponent;\r\n\t\tif(GivenNumber.match(/e+/)) Exponent = Number(GivenNumber.split(\"e+\")[1]);\r\n\t\telse{\r\n\t\t\tif(GivenNumber.match(/-/)) Exponent = GivenNumber.length - 1;\r\n\t\t\telse Exponent = GivenNumber.length;\r\n\t\t}\r\n\t\tlet Decimals;\r\n\t\tif(!Negative) Decimals = (GivenNumber.substring(1, 1 + Precision)).split(\"e\")[0];\r\n\t\telse Decimals = (GivenNumber.substring(2, 2 + Precision)).split(\"e\")[0];\r\n\t\tlet Result;\r\n\t\tif(!Negative) Result = GivenNumber[0] + \".\" + Decimals + \"x10^\" + Exponent;\r\n\t\telse Result = GivenNumber.substring(0, 2) + \".\" + Decimals + \"x10^\" + Exponent;\r\n\t\treturn Result;\r\n\t}\r\n\tstatic HTTPPost(URL, Data, Callback){ ///HTTPPost request with specific data, with a callback. (async)\r\n\t\t///https://stackoverflow.com/questions/24468459/sending-a-json-to-server-and-retrieving-a-json-in-return-without-jquery hex494D49\r\n\t\tlet XHR = new XMLHttpRequest();\r\n\t\tXHR.open(\"POST\", URL, true);\r\n\r\n\t\t//Send the proper header information along with the request\r\n\t\tXHR.setRequestHeader(\"Content-type\", \"application/json\");\r\n\r\n\t\tXHR.send(Data);\r\n\r\n\r\n\t\tXHR.onreadystatechange = function() {//Call a function when the state changes.\r\n\t\t\tif(XHR.readyState === 4) {\r\n\t\t\t\tlet Response = XHR.responseText;\r\n\t\t\t\tif(Callback !== undefined) Callback(Response, XHR);\r\n\t\t\t}\r\n\t\t}.bind(this);\r\n\t}\r\n\tstatic HTTPGet(URL, Callback){ ///HTTPGet request, with a callback. (async)\r\n\t\tlet XHR = new XMLHttpRequest();\r\n\t\tXHR.open(\"GET\", URL, true);\r\n\r\n\t\tXHR.send();\r\n\r\n\t\tXHR.onreadystatechange = function(){\r\n\t\t\tif(XHR.readyState === 4) {\r\n\t\t\t\tlet Response = XHR.responseText;\r\n\t\t\t\tif(Callback !== undefined) Callback(Response, XHR);\r\n\t\t\t}\r\n\t\t}.bind(this);\r\n\t}\r\n\tstatic GetOrdinalIndicator(_Num){ ///For example, if _Num = 1, then \"st\" is returned, if _Num = 3 then \"rd\" is returned, and if _Num = 11 then \"th\" is returned.\r\n\t\tlet Num = String(_Num);\r\n\t\tif(Number(Num[Num.length - 1]) >= 4 || Number(Num[Num.length - 1]) === 0) return \"th\";\r\n\t\telse{\r\n\t\t\tif(Number(Num[Num.length - 2]) === 1) return \"th\";\r\n\t\t\telse{\r\n\t\t\t\tif(Number(Num[Num.length - 1]) === 1) return \"st\";\r\n\t\t\t\tif(Number(Num[Num.length - 1]) === 2) return \"nd\";\r\n\t\t\t\tif(Number(Num[Num.length - 1]) === 3) return \"rd\";\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tstatic RedirectTo(Link){\r\n\t\t//window.location.href = Link;\r\n\t\t//setTimeout(function(){document.location.href = Link;}, 100);\r\n\t\tlet Element = document.createElement(\"a\");\r\n\t    Element.setAttribute(\"href\", Link);\r\n\t    document.body.appendChild(Element);\r\n\t    Element.click();\r\n\t    document.body.removeChild(Element);\r\n\t}\r\n\tstatic RequestUserFile(Callback){\r\n\t\tlet Element = document.createElement(\"input\");\r\n\t\tElement.type = \"file\";\r\n\t\tElement.click();\r\n\t\tElement.addEventListener(\"change\", function(e){\r\n\t\t\tconsole.log(Element.files);\r\n\r\n\t\t\tlet Reader = new FileReader();\r\n\t\t\tReader.readAsText(Element.files[0]);\r\n\t\t\tReader.addEventListener(\"load\", function(e){\r\n\t\t\t\tCallback(e.target.result);\r\n\t\t\t}.bind(this));\r\n\t\t}.bind(this));\r\n\t}\r\n\tstatic Download(FilePath, FileName){\r\n\t\tlet Element = document.createElement(\"a\");\r\n\t\tElement.download = FileName ?? \"\";\r\n\t\tElement.href = FilePath;\r\n\t\tElement.click();\r\n\t}\r\n\tstatic CopyToClipboard(Text){\r\n\t\tlet OnError = function(Error){\r\n\t\t\talert(\"Copying failed: \" + Error + \"\\nAttempted copy:\\n\" + Text);\r\n\t\t}.bind(this);\r\n\t\tif(navigator.clipboard === undefined){\r\n\t\t\tOnError(\"You have loaded the HTTP version of this site. To use the clipboard API, you need to switch to the HTTPS version. If it's available, simply change the protocol in the address bar. If not, the attempted copy can be seen below.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tnavigator.clipboard.writeText(Text).catch(OnError);\r\n\t}\r\n\tstatic RequestPrinting(){\r\n\t\twindow.print();\r\n\t}\r\n\tstatic RequestIFramePrint(IFrame){\r\n\t\t//IFrame.focus();\r\n\t\tIFrame.contentWindow.print();\r\n\t}\r\n\tstatic RequestCrossOriginIFramePrint(url) { //http://blog.davidjs.com/2018/03/print-document-from-cross-origin-iframe/\r\n\t  var proxyIframe = document.createElement('iframe');\r\n\t  var body = document.getElementsByTagName('body')[0];\r\n\t  body.appendChild(proxyIframe);\r\n\t  proxyIframe.style.width = '100%';\r\n\t  proxyIframe.style.height = '100%';\r\n\t  proxyIframe.style.display = 'none';\r\n\r\n\t  var contentWindow = proxyIframe.contentWindow;\r\n\t  contentWindow.document.open();\r\n\t  // Set dimensions according to your needs.\r\n\t  // You may need to calculate the dynamically after the content has loaded\r\n\t  contentWindow.document.write('<iframe src=\"' + url + '\" onload=\"print();\" width=\"1000\" height=\"1800\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">');\r\n\t  contentWindow.document.close();\r\n\t}\r\n\tstatic DownloadTextFile(Name, Content){ //https://stackoverflow.com/a/18197341\r\n\t\tlet Element = document.createElement(\"a\");\r\n\t  Element.setAttribute(\"href\", \"data:text/plain;charset=utf-8,\" + encodeURIComponent(Content));\r\n\t  Element.setAttribute(\"download\", Name);\r\n\r\n\t  Element.style.display = \"none\";\r\n\t  document.body.appendChild(Element);\r\n\r\n\t  Element.click();\r\n\r\n\t  document.body.removeChild(Element);\r\n\t}\r\n\tstatic DownloadIFrame(FileName, Element){\r\n\t\tlet Content = \"<!DOCTYPE html>\\r\\n<html xmlns=\\\"http://www.w3.org/1999/xhtml\\\" lang=\\\"en\\\">\" + Element.contentDocument.getElementsByTagName(\"html\")[0].innerHTML + \"</html>\";\r\n\t\tUtilities.DownloadTextFile(FileName, Content);\r\n\t}\r\n  static GetQueryStringValues(QueryString = location.search){ //https://stackoverflow.com/a/21152762\r\n    var qd = {};\r\n    if (location.search) location.search.substr(1).split(\"&\").forEach(function(item) {\r\n        var s = item.split(\"=\"),\r\n            k = s[0],\r\n            v = s[1] && decodeURIComponent(s[1]); //  null-coalescing / short-circuit\r\n        //(k in qd) ? qd[k].push(v) : qd[k] = [v]\r\n        (qd[k] = qd[k] || []).push(v) // null-coalescing / short-circuit\r\n    });\r\n    return qd;\r\n  }\r\n  static FormatDate(GivenDate){\r\n    return (GivenDate.getFullYear() + \"\").padStart(4, \"0\") + \"-\" + (1 + GivenDate.getMonth() + \"\").padStart(2, \"0\") + \"-\" + (GivenDate.getDate() + \"\").padStart(2, \"0\") + \" \" + (GivenDate.getHours() + \"\").padStart(2, \"0\") + \":\" + (GivenDate.getMinutes() + \"\").padStart(2, \"0\") + \":\" + (GivenDate.getSeconds() + \"\").padStart(2, \"0\");\r\n  }\r\n};\r\n\n\n//# sourceURL=webpack://ElectronProject/./VoxelEngine/Libraries/Utilities/0.7.13.8/Utilities.mjs?");

/***/ })

}]);